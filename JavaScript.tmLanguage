<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>keyEquivalent</key>
    <string>^~J</string>
    <key>uuid</key>
    <string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#brackets</string>
      </dict>
      <dict>
        <key>begin</key>
        <string>(?x)
        (function)
        (?=
          (?:\s+ (?:[_$a-zA-Z][_$\w]*))? \s* # The function name
          \([^)]*\) # The properties that the function accepts
        )</string>
        <key>comment</key>
        <string>function(one,two,...)\n?{...}</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.function.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function.js</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-params</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#leading-space</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-block</string>
          </dict>
        </array>
        <key>end</key>
        <string>(?&lt;=})(\s*\n)?</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>meta.group.braces.round.function.arguments.js</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.js</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.scope.round.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function-call.method.without-arguments.js</string>
        <key>match</key>
        <string>(?x)(?&lt;= \. ) ([_$a-zA-Z][_$\w]*) ((\( \s* \)))</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.method.js</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.js</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.method.js</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.method.js</string>
        <key>match</key>
        <string>(?x)(?&lt;! [_$\w] )(?&lt;!function) ([_$a-zA-Z][_$\w]*) (\()(\s*(?:[_$a-zA-Z][_$\w]*,\s*)*[_$a-zA-Z][_$\w]*\s*)?(\))  \s*(?={)</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function-call.method.with-arguments.js</string>
        <key>match</key>
        <string>(?x)(?&lt;= \. ) ([_$a-zA-Z][_$\w]*) (?=\()</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>meta.group.braces.round.function.arguments.js</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.js</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.scope.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function-call.static.without-arguments.js</string>
        <key>match</key>
        <string>(?x)(?&lt;! [_$\w] )(?&lt;!function) ([_$a-zA-Z][_$\w]*) ((\( \s* \)))</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function-call.static.with-arguments.js</string>
        <key>match</key>
        <string>(?x)(?&lt;! [_$\w] )(?&lt;!function) ([_$a-zA-Z][_$\w]*) (?=\()</string>
      </dict>
      <dict>
        <key>include</key>
        <string>source.js</string>
      </dict>
      <dict>
        <key>name</key>
        <string>variable.other.property.js</string>
        <key>match</key>
        <string>(?x)(?&lt;= \. ) ([_$a-zA-Z][_$\w]*)</string>
      </dict>
      <dict>
        <key>name</key>
        <string>variable.other.js</string>
        <key>match</key>
        <string>(?x)
       (?&lt;! [\._$a-zA-Z] )  [_$] [_$\w]*
      |(?&lt;= var \s  ) [_$a-zA-Z] [_$\w]*
      |(?&lt;! [_$\w] ) [_$a-zA-Z] [_$\w]* (?=(
        \[
        |\s*(&amp;|\*|\-|\+|~|=|!=|&lt;|&gt;|!|\||/=|%=|\^=)
      ))</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#leading-space</string>
      </dict>
    </array>
    <key>name</key>
    <string>JavaScript</string>
    <key>scopeName</key>
    <string>source.js.base</string>
    <key>foldingStopMarker</key>
    <string>(?x)^
      #                     (         Blank |Comments                                        | (No Paren | String) | String                                                        | (Nested Parens             )  )*+  Close  Yes *+
      (?&gt;                   (?&lt;yesS&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noS&gt;[^\[\]'"/]) | (?&lt;str&gt; '(\\'|[^'])*+' | "(\\"|[^"])*+" | /(\\/|[^/])*+/) | (?&lt;squar&gt; \[ \g&lt;yesS&gt;*+ \] )  )*+  \]     \g&lt;yesS&gt;*+
      |                     (?&lt;yesR&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noR&gt;[^\(\)'"/]) | \g&lt;str&gt;                                                       | (?&lt;round&gt; \( \g&lt;yesR&gt;*+ \) )  )*+  \)     \g&lt;yesR&gt;*+
      |                     (?&lt;yesC&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noC&gt;[^\{\}'"/]) | \g&lt;str&gt;                                                       | (?&lt;curly&gt; \{ \g&lt;yesC&gt;*+ \} )  )*+  \}     \g&lt;yesC&gt;*+
    )$</string>
    <key>foldingStartMarker</key>
    <string>(?x)^
      #   Yes *+      Open  (         Blank |Comments                                        | (No Paren | String) | String                                                        | (Nested Parens             )  )*+
      (?&gt; \g&lt;yesS&gt;*+  \[    (?&lt;yesS&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noS&gt;[^\[\]'"/]) | (?&lt;str&gt; '(\\'|[^'])*+' | "(\\"|[^"])*+" | /(\\/|[^/])*+/) | (?&lt;squar&gt; \[ \g&lt;yesS&gt;*+ \] )  )*+
      |   \g&lt;yesR&gt;*+  \(    (?&lt;yesR&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noR&gt;[^\(\)'"/]) | \g&lt;str&gt;                                                       | (?&lt;round&gt; \( \g&lt;yesR&gt;*+ \) )  )*+
      |   \g&lt;yesC&gt;*+  \{    (?&lt;yesC&gt;  (?!.) |//.*+|/\*((?!\*/).)++(\*/|$)|(^)((?!/\*).)*(\*/)| (?&lt;noC&gt;[^\{\}'"/]) | \g&lt;str&gt;                                                       | (?&lt;curly&gt; \{ \g&lt;yesC&gt;*+ \} )  )*+
    )$</string>
    <key>repository</key>
    <dict>
      <key>function-params</key>
      <dict>
        <key>begin</key>
        <string>(?x)
        (?&lt;=function) # Must come after the word "function"
        (?:\s+ ([_$a-zA-Z][_$\w]*))? # Mtch the name if it exists
        \s* (\()</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.js</string>
          </dict>
        </dict>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.js</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.js</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.group.braces.round.function.arguments.js</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.delimiter.js</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(,)\s*+(?=\))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.parameters.function.js</string>
            <key>match</key>
            <string>,</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.delimiter.js</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(?&lt;![_$\w])([^_$a-zA-Z),\s]+)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.function.js</string>
            <key>match</key>
            <string>(?&lt;![_$\w])([_$a-zA-Z][_$\w]*)</string>
          </dict>
        </array>
        <key>end</key>
        <string>\)</string>
      </dict>
      <key>brackets</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\{)</string>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.objects.js</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.scope.curly.js</string>
              </dict>
            </dict>
            <key>name</key>
            <string>meta.group.braces.curly</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#object-properties</string>
              </dict>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\})(,)?\s*</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\()(?!\))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.scope.round.js</string>
              </dict>
            </dict>
            <key>name</key>
            <string>meta.group.braces.round</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\))</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\[)(?!\])</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.scope.square.js</string>
              </dict>
            </dict>
            <key>name</key>
            <string>meta.group.braces.square</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
            <key>end</key>
            <string>(\])</string>
          </dict>
        </array>
      </dict>
      <key>leading-space</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^(?=(\t|  ))</string>
            <key>name</key>
            <string>meta.leading-tabs</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>captures</key>
                <dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group2.spaces</string>
                  </dict>
                  <key>11</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group11.spaces</string>
                  </dict>
                  <key>9</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group9.spaces</string>
                  </dict>
                  <key>10</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group10.spaces</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group3.spaces</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group5.spaces</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group4.spaces</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group1.spaces</string>
                  </dict>
                  <key>6</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group6.spaces</string>
                  </dict>
                  <key>7</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group7.spaces</string>
                  </dict>
                  <key>8</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group8.spaces</string>
                  </dict>
                </dict>
                <key>match</key>
                <string>(  )(  )?(  )?(  )?(  )?(  )?(  )?(  )?(  )?(  )?(  )?</string>
              </dict>
              <dict>
                <key>captures</key>
                <dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group2.tab</string>
                  </dict>
                  <key>11</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group11.tab</string>
                  </dict>
                  <key>9</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group9.tab</string>
                  </dict>
                  <key>10</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group10.tab</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group3.tab</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group5.tab</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group4.tab</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group1.tab</string>
                  </dict>
                  <key>6</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group6.tab</string>
                  </dict>
                  <key>7</key>
                  <dict>
                    <key>name</key>
                    <string>meta.odd-tab.group7.tab</string>
                  </dict>
                  <key>8</key>
                  <dict>
                    <key>name</key>
                    <string>meta.even-tab.group8.tab</string>
                  </dict>
                </dict>
                <key>match</key>
                <string>(\t)(\t)?(\t)?(\t)?(\t)?(\t)?(\t)?(\t)?(\t)?(\t)?(\t)?</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=[^\t\s])</string>
          </dict>
        </array>
      </dict>
      <key>function-block</key>
      <dict>
        <key>begin</key>
        <string>({)</string>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.js</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.function.js</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
        <key>end</key>
        <string>(})</string>
      </dict>
      <key>object-properties</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.delimiter.object.comma.js</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(,)\s*+(?=\})</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.js</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.js</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.objects.js</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.double.js</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.other.object.key.js</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>"something": </string>
            <key>match</key>
            <string>((")([^"]*)(")\s*)(:)(?!\s*+function)</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.js</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.js</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.objects.js</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.single.js</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.other.object.key.js</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>'something' : </string>
            <key>match</key>
            <string>((')([^']*)(')\s*)(:)(?!\s*+function)</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.objects.js</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.other.object.key.js</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>something : </string>
            <key>match</key>
            <string>\b(\w+\b\s*)(:)(?!\s*+function)</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
